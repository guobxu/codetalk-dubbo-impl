<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.codetalk.apps.flow.post.mapper.PostMapper">

	<resultMap id="postVOResultMap" type="me.codetalk.apps.flow.post.entity.vo.PostVO">
		<result property="id" column="post_id"></result>
		<result property="userId" column="user_id"></result>
		<result property="content" column="post_content"></result>
		<result property="type" column="post_type"></result>
		<result property="images" column="post_imgs"></result>
		<result property="tags" column="post_tags"></result>
		<result property="deleteMark" column="delete_mark"></result>
		<result property="deleteReason" column="delete_reason"></result>
		<result property="mailVerified" column="mobile_verified"></result>
		<result property="mail" column="user_mail"></result>
		<result property="mailVerified" column="mail_verified"></result>
		<result property="disabled" column="user_disabled"></result>
		<result property="disableReason" column="disable_reason"></result>

		<result property="lastUpdate" column="last_update"></result>
		<result property="updateBy" column="update_by"></result>
		<result property="createDate" column="create_date"></result>
	</resultMap>
	
	<resultMap id="pollPostVOResultMap" type="me.codetalk.apps.flow.post.entity.vo.PostVO" extends="postVOResultMap">
		<association property="poll" resultMap="pollResultMap"/>
	</resultMap>
	
	<sql id="Base_Column_List">
		post_id, user_id, post_content, post_type, post_tags, post_imgs, delete_mark, 
		delete_reason, last_update, update_by, create_date
	</sql>
	
	<insert id="insertPost" parameterType="me.codetalk.apps.flow.post.entity.Post" 
			useGeneratedKeys="true" keyProperty="id" keyColumn="post_id">
		insert into posts (user_id, post_content, post_type, post_imgs, create_date)
		values (#{userId}, #{content}, #{type}, #{images}, #{createDate})
	</insert>
	
	<select id="selectPostById" parameterType="map" resultMap="postVOResultMap">
		select <include refid="Base_Column_List" />
		  from posts 
		 where post_id = #{postId} and delete_mark = 0
	</select>
	
	<select id="selectPostByIdIn" parameterType="java.util.List" resultMap="postVOResultMap">
		select <include refid="Base_Column_List" />
		  from posts 
		 where delete_mark = 0
		   and post_id in (
		   		<foreach collection ="list" item="postId" index= "index" separator =",">#{postId}</foreach>
		   ) 
	</select>
	
	<select id="selectLatestPost" parameterType="map" resultMap="postVOResultMap">
		select <include refid="Base_Column_List" />
		  from posts 
		 where delete_mark = 0
		 order by create_date desc
		 limit #{begin}, #{count}
	</select>
	
	<select id="selectPollPostById" parameterType="map" resultMap="pollPostVOResultMap">
		select p.post_id, user_id, post_content, post_type, post_tags, post_imgs, delete_mark, 
					delete_reason, last_update, update_by, p.create_date, 
					pl.poll_id, pl.poll_duration, pl.poll_start, pl.poll_end,
				  po.option_id, po.option_text
		  from posts p 
		  left join polls pl on p.post_id = pl.post_id
		  left join poll_options po on pl.poll_id = po.poll_id
		 where p.post_id = #{postId} and delete_mark = 0
	</select>
	
	<update id="updatePostTags" parameterType="map">
		update posts set post_tags = #{tags} where post_id = #{postId}
	</update>
	
	<update id="updatePost" parameterType="map">
		update posts set post_id = post_id
			<if test="post.tags != null">
				, post_tags = #{post.tags}
			</if>
		 where post_id = #{post.id} 
	</update>
	
	<select id="selectPostTagBetween" parameterType="map" resultType="String">
		select post_tags from posts 
		 where create_date between #{start} and #{end}
		   and delete_mark = 0
		 order by create_date asc
		 limit #{begin}, #{count}
	</select>
	
	<insert id="insertPostLike" parameterType="map">
		insert into post_likes(user_id, post_id, create_date) 
		values (#{userId}, #{postId}, UNIX_TIMESTAMP() * 1000)
	</insert>
	
	<delete id="deletePostLike" parameterType="map">
		delete from post_likes where post_id = #{postId} and user_id = #{userId}
	</delete>
	
	<select id="selectLikedIn" parameterType="map" resultType="Long">
		select post_id 
		  from post_likes 
		 where user_id = #{userId} 
		   and post_id in (
		   	   <foreach collection ="postIdList" item="postId" index= "index" separator =",">#{postId}</foreach>
		   )
	</select>
	
	<select id="selectPostByUser" parameterType="map" resultMap="postVOResultMap">
		select <include refid="Base_Column_List" />
		  from posts 
		 where user_id = #{userId}
		   and delete_mark = 0
		 order by create_date desc
		 limit #{begin}, #{count} 	
	</select>
	
	<select id="selectPostLikeByUser" parameterType="map" resultMap="postVOResultMap">
		select p.post_id, p.user_id, post_content, post_type, post_tags, post_imgs, delete_mark, 
				delete_reason, last_update, update_by, p.create_date
	      from post_likes pl, posts p
	     where pl.user_id = #{userId} 
	       and pl.post_id = p.post_id
	     order by pl.create_date desc
	     limit #{begin}, #{count}
	</select>
	
	<!-- Dev Only -->
	<select id="selectAllPosts" resultMap = "postVOResultMap">
		select post_id, user_id, post_content, post_type, post_tags, post_imgs, delete_mark, 
				delete_reason, last_update, update_by, create_date
		  from posts 
		 where delete_mark = 0
	</select>
	
</mapper>











